reportbase
-------------------------------------------------------------
This script was released under GPL license spring 2011 and is as such
free to use but without guarantees of support. See file COPYING for more
information on GPL.

The script sets up a directory structure for a scientific report.
Each chapter will be given it's separate directory containing all files
related to that chapter.

All the chapters are then collected by Report.tex that is created in the
root directory.


Best regards,
Jonatan Olofsson
[jonatan.olofsson, gmail]
-------------------------------------------------------------

1) Installation
The script can be installed by running
$ make install
as root. This will move the files to /etc/reportbase and create a
/usr/bin/reportbase symlink to the program.

2) Installing mattools
reportbase is inteded to be used with the Matlab/LaTeX toolbox mattools.
This can be found at https://github.com/jonatanolofsson/mattools
and is installed simply by putting the directory in matlab's path.

3) Command-line usage
Typical commands in reportbase are as follows
# Creates an initial directory structure for the report
$ reportbase init

# Creates the chapters "introduction", "resutls", "conclusions" and the appendix "code".
# Additionally, an m-file is created and prepared in resutls/matlab/resutls.m
# as the m-flag is toggled to on before this chapter, then disabled again right after.
$ reportbase add introduction -m resutls -m conclusions -a code

# Rename the chapter "resutls" to "results". If the file "resutls/matlab/resutls.m"
# exists, it will be renamed to "results/matlab/results.m"
$ reportbase rename resutls results

# Run the m-files for each chapter. Figures created with mattools in the
# script will be saved in the "figures" subdirectory of the chapter.
$ reportbase generate

4) Matlab/LaTeX connection
To generate figures to include in the latex report, simply request a figure
using "figures.getFigure('nameoffigure')" in the chapter's matlab code (chaptername/matlab/chaptername.m)
and then plot as usual. After the script has finished executing, all plots
will be exported as colored eps'es to the chaptername/figures directory.
"figures" is an object that is automatically created before entering the
script and is thus available from start.

The figures can then be included in the chapter's latex code by using the
\fig{nameoffigure}{Comment to the figure}{fig:chapter:figurelabel}
command.

5) LaTeX report base
A few default settings has been made in the LaTeX setup that is generated.
Partly, the mcode package is included, as documented on
http://my.opera.com/locksley90/blog/2008/02/25/how-to-include-matlab-source-code-in-a-latex-document

Also, a few styling options are set in include/style.sty.tex.
The usepackages that are enabled by default are
\usepackage{amsfonts}
\usepackage[fleqn]{amsmath}
\usepackage{amssymb}
\usepackage[\lang]{babel}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{lmodern}
\usepackage{graphicx}
\usepackage{float,multicol,epsfig}
\usepackage{verbatim}
\usepackage{rotating}
\usepackage{newclude}
\usepackage{include/mcode}

Settings for PDF-generation are included in include/pdf.inc.tex.

In include/functions.inc.tex, a few useful functions are included.
The most used of these are \matlab and, above all, the already mentioned
\fig{nameoffigure}{Comment to the figure}{fig:chapter:figurelabel}
